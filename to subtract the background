import cv2

# Function to subtract background based on color levels
def subtract_background(image_path):
    # Read the input image
    image = cv2.imread(image_path)
    
    # Convert the image to grayscale
    gray_image = cv2.cvtColor(image, cv2.COLOR_BGR2GRAY)
    
    # Apply thresholding to obtain binary mask for background
    _, binary_mask = cv2.threshold(gray_image, 200, 255, cv2.THRESH_BINARY)
    
    # Invert the binary mask to represent background
    background_mask = cv2.bitwise_not(binary_mask)
    
    # Apply the background mask to the original image to extract the foreground
    foreground = cv2.bitwise_and(image, image, mask=background_mask)
    
    return foreground

# Example usage
image_path = 'input_image.jpg'
foreground = subtract_background(image_path)

# Display the original image and the foreground
cv2.imshow('Original Image', cv2.imread(image_path))
cv2.imshow('Foreground', foreground)
cv2.waitKey(0)
cv2.destroyAllWindows()
